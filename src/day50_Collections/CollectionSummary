Java Day50
Topics: 1. Collection continue - Iterable
		2. Collection Review

package name: day50_Collections

Collections Framework: consists of multiple interface, each interface is implemented by classes

	Collection (I): dynamic sized
					ready methods
					for non-primitives ONLY

					extended by List, Set, Queue

				List (I): duplicates are allowed, has index number

						*ArrayList (C): searching/accessing elements is faster.

						LinkedList (C): insertion /deletion of the element is faster

						Vector (C): is Synhcronized ==> thread-safe

						Stack (C): is Synhcronized ==> thread-safe. LIFO

								pop() ===> LIFO


				Set (I): duplicates are not allowed, does not have index number

						*HashSet (C): Maintains random order. Fastest. Accept null

						LinkedHashSet (C): Maintains insertion order. Accept null

						TreeSet (C): Maintains sorted order, does not accept null. If there is null, you get NullPointerException


				Queue (I): duplicates are allowed, does not have index number. FIFO

							poll() ===> FIFO

						PriorityQueue (C): Maintains random order. No index number.


						ArrayDequeue (C): Maintains insertion order. No index number.


						LinkedList (C): Maintains insertion order. Has index number.(implements List and Queue interfaces both)


Set<Integer> set = new HashSet<>();
        set.addAll(Arrays.asList(1,2,3,4,5,1,2,3,4,5));



        Integer[] array = set.toArray(new Integer[0]);    converting to array

        List<Integer> list =new ArrayList<>( set );     //converting to list


